{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/api';\n    this.formUpdatesSubject = new Subject();\n    this.initializeWebSocket();\n  }\n  initializeWebSocket() {\n    this.ws = new WebSocket('ws://localhost:8000/ws');\n    this.ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'update-form') {\n        this.formUpdatesSubject.next(data.payload);\n      }\n    };\n    this.ws.onclose = () => {\n      // Reconnect after a delay\n      setTimeout(() => this.initializeWebSocket(), 5000);\n    };\n  }\n  askAgent(prompt) {\n    return this.http.get(`${this.apiUrl}/ask-agent/${encodeURIComponent(prompt)}`);\n  }\n  startAgent() {\n    return this.http.get(`${this.apiUrl}/start-agent`);\n  }\n  updateFormField(fieldData) {\n    return this.http.post(`${this.apiUrl}/update-form-field`, fieldData);\n  }\n  getFormUpdates() {\n    return this.formUpdatesSubject.asObservable();\n  }\n  static {\n    this.ɵfac = function ChatService_Factory(t) {\n      return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatService,\n      factory: ChatService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Subject","ChatService","constructor","http","apiUrl","formUpdatesSubject","initializeWebSocket","ws","WebSocket","onmessage","event","data","JSON","parse","type","next","payload","onclose","setTimeout","askAgent","prompt","get","encodeURIComponent","startAgent","updateFormField","fieldData","post","getFormUpdates","asObservable","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Users\\william.wong\\Documents\\GitHub\\customer-onboarding-ai-agent\\angular-client\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport interface ChatMessage {\r\n  id: number;\r\n  text: string;\r\n  isUser: boolean;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface FormField {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n  private apiUrl = 'http://localhost:8000/api';\r\n  private ws?: WebSocket;\r\n  private formUpdatesSubject = new Subject<any>();\r\n  \r\n  constructor(private http: HttpClient) {\r\n    this.initializeWebSocket();\r\n  }\r\n\r\n  private initializeWebSocket() {\r\n    this.ws = new WebSocket('ws://localhost:8000/ws');\r\n    \r\n    this.ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === 'update-form') {\r\n        this.formUpdatesSubject.next(data.payload);\r\n      }\r\n    };\r\n\r\n    this.ws.onclose = () => {\r\n      // Reconnect after a delay\r\n      setTimeout(() => this.initializeWebSocket(), 5000);\r\n    };\r\n  }\r\n\r\n  askAgent(prompt: string): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/ask-agent/${encodeURIComponent(prompt)}`);\r\n  }\r\n\r\n  startAgent(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/start-agent`);\r\n  }\r\n\r\n  updateFormField(fieldData: FormField): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/update-form-field`, fieldData);\r\n  }\r\n\r\n  getFormUpdates(): Observable<any> {\r\n    return this.formUpdatesSubject.asObservable();\r\n  }\r\n} "],"mappings":"AAEA,SAAqBA,OAAO,QAAQ,MAAM;;;AAiB1C,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,2BAA2B;IAEpC,KAAAC,kBAAkB,GAAG,IAAIL,OAAO,EAAO;IAG7C,IAAI,CAACM,mBAAmB,EAAE;EAC5B;EAEQA,mBAAmBA,CAAA;IACzB,IAAI,CAACC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAEjD,IAAI,CAACD,EAAE,CAACE,SAAS,GAAIC,KAAK,IAAI;MAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACG,IAAI,KAAK,aAAa,EAAE;QAC/B,IAAI,CAACT,kBAAkB,CAACU,IAAI,CAACJ,IAAI,CAACK,OAAO,CAAC;;IAE9C,CAAC;IAED,IAAI,CAACT,EAAE,CAACU,OAAO,GAAG,MAAK;MACrB;MACAC,UAAU,CAAC,MAAM,IAAI,CAACZ,mBAAmB,EAAE,EAAE,IAAI,CAAC;IACpD,CAAC;EACH;EAEAa,QAAQA,CAACC,MAAc;IACrB,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAC,GAAG,IAAI,CAACjB,MAAM,cAAckB,kBAAkB,CAACF,MAAM,CAAC,EAAE,CAAC;EAChF;EAEAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACpB,IAAI,CAACkB,GAAG,CAAC,GAAG,IAAI,CAACjB,MAAM,cAAc,CAAC;EACpD;EAEAoB,eAAeA,CAACC,SAAoB;IAClC,OAAO,IAAI,CAACtB,IAAI,CAACuB,IAAI,CAAC,GAAG,IAAI,CAACtB,MAAM,oBAAoB,EAAEqB,SAAS,CAAC;EACtE;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACtB,kBAAkB,CAACuB,YAAY,EAAE;EAC/C;;;uBAvCW3B,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX/B,WAAW;MAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}