{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/progress-bar\";\nimport * as i12 from \"@angular/material/divider\";\nfunction OnboardingComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"mat-card\", 31)(2, \"mat-card-content\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", message_r1.isUser ? \"user-message\" : \"ai-message\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r1.text, \" \");\n  }\n}\nfunction OnboardingComponent_mat_progress_bar_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 32);\n  }\n}\nfunction OnboardingComponent_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const env_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", env_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(env_r2);\n  }\n}\nfunction OnboardingComponent_mat_option_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const env_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", env_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(env_r3);\n  }\n}\nfunction OnboardingComponent_mat_option_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const method_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", method_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(method_r4);\n  }\n}\nfunction OnboardingComponent_mat_form_field_69_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Other Transfer Method\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 34);\n    i0.ɵɵlistener(\"blur\", function OnboardingComponent_mat_form_field_69_Template_input_blur_3_listener() {\n      let tmp_2_0;\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onFieldChange(\"otherTransferMethod\", (tmp_2_0 = ctx_r5.onboardingForm.get(\"otherTransferMethod\")) == null ? null : tmp_2_0.value));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OnboardingComponent_mat_option_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(type_r7);\n  }\n}\nfunction OnboardingComponent_mat_form_field_79_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Custom Schedule\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 35);\n    i0.ɵɵlistener(\"blur\", function OnboardingComponent_mat_form_field_79_Template_input_blur_3_listener() {\n      let tmp_2_0;\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onFieldChange(\"customSchedule\", (tmp_2_0 = ctx_r5.onboardingForm.get(\"customSchedule\")) == null ? null : tmp_2_0.value));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OnboardingComponent_mat_form_field_84_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const day_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", day_r10);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(day_r10);\n  }\n}\nfunction OnboardingComponent_mat_form_field_84_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Day of Week\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 36);\n    i0.ɵɵlistener(\"selectionChange\", function OnboardingComponent_mat_form_field_84_Template_mat_select_selectionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onFieldChange(\"dayOfWeek\", $event.value));\n    });\n    i0.ɵɵtemplate(4, OnboardingComponent_mat_form_field_84_mat_option_4_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.daysOfWeek);\n  }\n}\nfunction OnboardingComponent_mat_form_field_85_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Day of Month (1-31)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 37);\n    i0.ɵɵlistener(\"blur\", function OnboardingComponent_mat_form_field_85_Template_input_blur_3_listener() {\n      let tmp_2_0;\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onFieldChange(\"dayOfMonth\", (tmp_2_0 = ctx_r5.onboardingForm.get(\"dayOfMonth\")) == null ? null : tmp_2_0.value));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class OnboardingComponent {\n  constructor(chatService, formBuilder) {\n    this.chatService = chatService;\n    this.formBuilder = formBuilder;\n    this.chatMessages = [];\n    this.newMessage = '';\n    this.isLoading = false;\n    this.messageCounter = 0;\n    this.environments = ['Development', 'Testing', 'Staging', 'Production'];\n    this.transferMethods = ['SFTP', 'API', 'Database', 'File Share', 'Message Queue', 'Other'];\n    this.frequencyTypes = ['Daily', 'Weekly', 'Monthly', 'Custom'];\n    this.daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    this.onboardingForm = this.formBuilder.group({\n      flowName: ['', Validators.required],\n      sourceSystemName: ['', Validators.required],\n      sourceEnvironment: ['', Validators.required],\n      sourceSystemOwner: ['', Validators.required],\n      targetSystemName: ['', Validators.required],\n      targetEnvironment: ['', Validators.required],\n      targetSystemOwner: ['', Validators.required],\n      transferMethod: ['', Validators.required],\n      otherTransferMethod: [''],\n      frequencyType: ['', Validators.required],\n      customSchedule: [''],\n      specificTime: [''],\n      dayOfWeek: [''],\n      dayOfMonth: ['']\n    });\n  }\n  ngOnInit() {\n    this.startAgent();\n    this.subscribeToFormUpdates();\n  }\n  ngOnDestroy() {\n    if (this.formUpdatesSubscription) {\n      this.formUpdatesSubscription.unsubscribe();\n    }\n  }\n  startAgent() {\n    this.chatService.startAgent().subscribe({\n      next: response => {\n        this.addMessage(response.answer, false);\n      },\n      error: error => {\n        console.error('Error starting agent:', error);\n        this.addMessage('Error connecting to AI agent. Please check if the backend is running.', false);\n      }\n    });\n  }\n  subscribeToFormUpdates() {\n    this.formUpdatesSubscription = this.chatService.getFormUpdates().subscribe({\n      next: updates => {\n        try {\n          const parsedUpdates = JSON.parse(updates);\n          if (parsedUpdates.name && parsedUpdates.value !== undefined) {\n            this.onboardingForm.patchValue({\n              [parsedUpdates.name]: parsedUpdates.value\n            });\n          }\n        } catch (error) {\n          console.error('Error parsing form updates:', error);\n        }\n      }\n    });\n  }\n  sendMessage() {\n    if (!this.newMessage.trim()) return;\n    this.addMessage(this.newMessage, true);\n    this.isLoading = true;\n    this.chatService.askAgent(this.newMessage).subscribe({\n      next: response => {\n        this.addMessage(response.answer, false);\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error sending message:', error);\n        this.addMessage('Error sending message. Please check if the backend is running.', false);\n        this.isLoading = false;\n      }\n    });\n    this.newMessage = '';\n  }\n  onFieldChange(fieldName, value) {\n    if (!value) return;\n    const fieldData = {\n      name: fieldName,\n      value: value\n    };\n    this.chatService.updateFormField(fieldData).subscribe({\n      next: response => {\n        this.addMessage(response.answer, false);\n      },\n      error: error => {\n        console.error('Error updating field:', error);\n      }\n    });\n  }\n  addMessage(text, isUser) {\n    const message = {\n      id: ++this.messageCounter,\n      text: text,\n      isUser: isUser,\n      timestamp: new Date()\n    };\n    this.chatMessages.push(message);\n  }\n  onEnterKeyPress(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  static {\n    this.ɵfac = function OnboardingComponent_Factory(t) {\n      return new (t || OnboardingComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OnboardingComponent,\n      selectors: [[\"app-onboarding\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 86,\n      vars: 12,\n      consts: [[1, \"full-height\"], [2, \"display\", \"flex\", \"height\", \"100%\"], [2, \"width\", \"50%\", \"border-right\", \"1px solid #e0e0e0\"], [1, \"chat-container\"], [2, \"background-color\", \"#1976d2\", \"color\", \"white\"], [2, \"color\", \"white\"], [1, \"chat-messages\"], [\"style\", \"margin-bottom: 16px;\", 4, \"ngFor\", \"ngForOf\"], [\"mode\", \"indeterminate\", \"color\", \"primary\", 4, \"ngIf\"], [1, \"chat-input\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"placeholder\", \"Ask the AI assistant anything...\", 3, \"ngModelChange\", \"keydown\", \"ngModel\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [2, \"width\", \"50%\", \"padding\", \"16px\"], [3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"flowName\", 3, \"blur\"], [1, \"section-card\"], [1, \"section-title\"], [\"matInput\", \"\", \"formControlName\", \"sourceSystemName\", 3, \"blur\"], [\"formControlName\", \"sourceEnvironment\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"sourceSystemOwner\", 3, \"blur\"], [\"matInput\", \"\", \"formControlName\", \"targetSystemName\", 3, \"blur\"], [\"formControlName\", \"targetEnvironment\", 3, \"selectionChange\"], [\"matInput\", \"\", \"formControlName\", \"targetSystemOwner\", 3, \"blur\"], [\"formControlName\", \"transferMethod\", 3, \"selectionChange\"], [\"appearance\", \"outline\", \"class\", \"full-width\", 4, \"ngIf\"], [\"formControlName\", \"frequencyType\", 3, \"selectionChange\"], [\"matInput\", \"\", \"type\", \"time\", \"formControlName\", \"specificTime\", 3, \"blur\"], [2, \"margin-bottom\", \"16px\"], [1, \"message-card\", 3, \"ngClass\"], [\"mode\", \"indeterminate\", \"color\", \"primary\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"otherTransferMethod\", 3, \"blur\"], [\"matInput\", \"\", \"formControlName\", \"customSchedule\", 3, \"blur\"], [\"formControlName\", \"dayOfWeek\", 3, \"selectionChange\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"1\", \"max\", \"31\", \"formControlName\", \"dayOfMonth\", 3, \"blur\"]],\n      template: function OnboardingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-header\", 4)(5, \"mat-card-title\", 5);\n          i0.ɵɵtext(6, \"AI Assistant\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtemplate(8, OnboardingComponent_div_8_Template, 4, 2, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, OnboardingComponent_mat_progress_bar_9_Template, 1, 0, \"mat-progress-bar\", 8);\n          i0.ɵɵelement(10, \"mat-divider\");\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"mat-form-field\", 10)(13, \"mat-label\");\n          i0.ɵɵtext(14, \"Type your message...\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 11);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function OnboardingComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newMessage, $event) || (ctx.newMessage = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"keydown\", function OnboardingComponent_Template_input_keydown_15_listener($event) {\n            return ctx.onEnterKeyPress($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function OnboardingComponent_Template_button_click_16_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelementStart(17, \"mat-icon\");\n          i0.ɵɵtext(18, \"send\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(19, \"div\", 13)(20, \"mat-card\")(21, \"mat-card-header\")(22, \"mat-card-title\");\n          i0.ɵɵtext(23, \"File Transfer Onboarding Form\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"mat-card-content\")(25, \"form\", 14)(26, \"mat-form-field\", 15)(27, \"mat-label\");\n          i0.ɵɵtext(28, \"Flow Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"input\", 16);\n          i0.ɵɵlistener(\"blur\", function OnboardingComponent_Template_input_blur_29_listener() {\n            let tmp_0_0;\n            return ctx.onFieldChange(\"flowName\", (tmp_0_0 = ctx.onboardingForm.get(\"flowName\")) == null ? null : tmp_0_0.value);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"mat-card\", 17)(31, \"mat-card-title\", 18);\n          i0.ɵɵtext(32, \"Source System Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"mat-card-content\")(34, \"mat-form-field\", 15)(35, \"mat-label\");\n          i0.ɵɵtext(36, \"Source System Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"input\", 19);\n          i0.ɵɵlistener(\"blur\", function OnboardingComponent_Template_input_blur_37_listener() {\n            let tmp_0_0;\n            return ctx.onFieldChange(\"sourceSystemName\", (tmp_0_0 = ctx.onboardingForm.get(\"sourceSystemName\")) == null ? null : tmp_0_0.value);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"mat-form-field\", 15)(39, \"mat-label\");\n          i0.ɵɵtext(40, \"Source Environment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"mat-select\", 20);\n          i0.ɵɵlistener(\"selectionChange\", function OnboardingComponent_Template_mat_select_selectionChange_41_listener($event) {\n            return ctx.onFieldChange(\"sourceEnvironment\", $event.value);\n          });\n          i0.ɵɵtemplate(42, OnboardingComponent_mat_option_42_Template, 2, 2, \"mat-option\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"mat-form-field\", 15)(44, \"mat-label\");\n          i0.ɵɵtext(45, \"Source System Owner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"input\", 22);\n          i0.ɵɵlistener(\"blur\", function OnboardingComponent_Template_input_blur_46_listener() {\n            let tmp_0_0;\n            return ctx.onFieldChange(\"sourceSystemOwner\", (tmp_0_0 = ctx.onboardingForm.get(\"sourceSystemOwner\")) == null ? null : tmp_0_0.value);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(47, \"mat-card\", 17)(48, \"mat-card-title\", 18);\n          i0.ɵɵtext(49, \"Target System Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"mat-card-content\")(51, \"mat-form-field\", 15)(52, \"mat-label\");\n          i0.ɵɵtext(53, \"Target System Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"input\", 23);\n          i0.ɵɵlistener(\"blur\", function OnboardingComponent_Template_input_blur_54_listener() {\n            let tmp_0_0;\n            return ctx.onFieldChange(\"targetSystemName\", (tmp_0_0 = ctx.onboardingForm.get(\"targetSystemName\")) == null ? null : tmp_0_0.value);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(55, \"mat-form-field\", 15)(56, \"mat-label\");\n          i0.ɵɵtext(57, \"Target Environment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"mat-select\", 24);\n          i0.ɵɵlistener(\"selectionChange\", function OnboardingComponent_Template_mat_select_selectionChange_58_listener($event) {\n            return ctx.onFieldChange(\"targetEnvironment\", $event.value);\n          });\n          i0.ɵɵtemplate(59, OnboardingComponent_mat_option_59_Template, 2, 2, \"mat-option\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(60, \"mat-form-field\", 15)(61, \"mat-label\");\n          i0.ɵɵtext(62, \"Target System Owner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"input\", 25);\n          i0.ɵɵlistener(\"blur\", function OnboardingComponent_Template_input_blur_63_listener() {\n            let tmp_0_0;\n            return ctx.onFieldChange(\"targetSystemOwner\", (tmp_0_0 = ctx.onboardingForm.get(\"targetSystemOwner\")) == null ? null : tmp_0_0.value);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(64, \"mat-form-field\", 15)(65, \"mat-label\");\n          i0.ɵɵtext(66, \"Transfer Method\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(67, \"mat-select\", 26);\n          i0.ɵɵlistener(\"selectionChange\", function OnboardingComponent_Template_mat_select_selectionChange_67_listener($event) {\n            return ctx.onFieldChange(\"transferMethod\", $event.value);\n          });\n          i0.ɵɵtemplate(68, OnboardingComponent_mat_option_68_Template, 2, 2, \"mat-option\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(69, OnboardingComponent_mat_form_field_69_Template, 4, 0, \"mat-form-field\", 27);\n          i0.ɵɵelementStart(70, \"mat-card\", 17)(71, \"mat-card-title\", 18);\n          i0.ɵɵtext(72, \"Transfer Frequency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(73, \"mat-card-content\")(74, \"mat-form-field\", 15)(75, \"mat-label\");\n          i0.ɵɵtext(76, \"Frequency Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(77, \"mat-select\", 28);\n          i0.ɵɵlistener(\"selectionChange\", function OnboardingComponent_Template_mat_select_selectionChange_77_listener($event) {\n            return ctx.onFieldChange(\"frequencyType\", $event.value);\n          });\n          i0.ɵɵtemplate(78, OnboardingComponent_mat_option_78_Template, 2, 2, \"mat-option\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(79, OnboardingComponent_mat_form_field_79_Template, 4, 0, \"mat-form-field\", 27);\n          i0.ɵɵelementStart(80, \"mat-form-field\", 15)(81, \"mat-label\");\n          i0.ɵɵtext(82, \"Specific Time (HH:MM)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(83, \"input\", 29);\n          i0.ɵɵlistener(\"blur\", function OnboardingComponent_Template_input_blur_83_listener() {\n            let tmp_0_0;\n            return ctx.onFieldChange(\"specificTime\", (tmp_0_0 = ctx.onboardingForm.get(\"specificTime\")) == null ? null : tmp_0_0.value);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(84, OnboardingComponent_mat_form_field_84_Template, 5, 1, \"mat-form-field\", 27)(85, OnboardingComponent_mat_form_field_85_Template, 4, 0, \"mat-form-field\", 27);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_7_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"formGroup\", ctx.onboardingForm);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngForOf\", ctx.environments);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngForOf\", ctx.environments);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.transferMethods);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.onboardingForm.get(\"transferMethod\")) == null ? null : tmp_7_0.value) === \"Other\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.frequencyTypes);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.onboardingForm.get(\"frequencyType\")) == null ? null : tmp_9_0.value) === \"Custom\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.onboardingForm.get(\"frequencyType\")) == null ? null : tmp_10_0.value) === \"Weekly\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.onboardingForm.get(\"frequencyType\")) == null ? null : tmp_11_0.value) === \"Monthly\");\n        }\n      },\n      dependencies: [CommonModule, i3.NgClass, i3.NgForOf, i3.NgIf, FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.MaxValidator, i2.NgModel, ReactiveFormsModule, i2.FormGroupDirective, i2.FormControlName, MatCardModule, i4.MatCard, i4.MatCardContent, i4.MatCardHeader, i4.MatCardTitle, MatFormFieldModule, i5.MatFormField, i5.MatLabel, i5.MatSuffix, MatInputModule, i6.MatInput, MatSelectModule, i7.MatSelect, i8.MatOption, MatButtonModule, i9.MatIconButton, MatIconModule, i10.MatIcon, MatProgressBarModule, i11.MatProgressBar, MatDividerModule, i12.MatDivider],\n      styles: [\".full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 16px;\\n}\\n\\n.section-card[_ngcontent-%COMP%] {\\n  margin-bottom: 16px;\\n  border: 1px solid #e0e0e0;\\n}\\n\\n.section-title[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  font-weight: 500;\\n  color: #1976d2;\\n}\\n\\n.message-card[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  margin-bottom: 8px;\\n}\\n\\n.user-message[_ngcontent-%COMP%] {\\n  background-color: #e3f2fd;\\n  margin-left: 20%;\\n}\\n\\n.ai-message[_ngcontent-%COMP%] {\\n  background-color: #f5f5f5;\\n  margin-right: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9vbmJvYXJkaW5nL29uYm9hcmRpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0VBQ0EseUJBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbn1cclxuXHJcbi5zZWN0aW9uLWNhcmQge1xyXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTBlMDtcclxufVxyXG5cclxuLnNlY3Rpb24tdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGNvbG9yOiAjMTk3NmQyO1xyXG59XHJcblxyXG4ubWVzc2FnZS1jYXJkIHtcclxuICBwYWRkaW5nOiAxMnB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDhweDtcclxufVxyXG5cclxuLnVzZXItbWVzc2FnZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UzZjJmZDtcclxuICBtYXJnaW4tbGVmdDogMjAlO1xyXG59XHJcblxyXG4uYWktbWVzc2FnZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuICBtYXJnaW4tcmlnaHQ6IDIwJTtcclxufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","ReactiveFormsModule","FormsModule","CommonModule","MatCardModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatButtonModule","MatIconModule","MatProgressBarModule","MatDividerModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","message_r1","isUser","ɵɵtextInterpolate1","text","ɵɵelement","env_r2","ɵɵtextInterpolate","env_r3","method_r4","ɵɵlistener","OnboardingComponent_mat_form_field_69_Template_input_blur_3_listener","tmp_2_0","ɵɵrestoreView","_r5","ctx_r5","ɵɵnextContext","ɵɵresetView","onFieldChange","onboardingForm","get","value","type_r7","OnboardingComponent_mat_form_field_79_Template_input_blur_3_listener","_r8","day_r10","OnboardingComponent_mat_form_field_84_Template_mat_select_selectionChange_3_listener","$event","_r9","ɵɵtemplate","OnboardingComponent_mat_form_field_84_mat_option_4_Template","daysOfWeek","OnboardingComponent_mat_form_field_85_Template_input_blur_3_listener","_r11","OnboardingComponent","constructor","chatService","formBuilder","chatMessages","newMessage","isLoading","messageCounter","environments","transferMethods","frequencyTypes","group","flowName","required","sourceSystemName","sourceEnvironment","sourceSystemOwner","targetSystemName","targetEnvironment","targetSystemOwner","transferMethod","otherTransferMethod","frequencyType","customSchedule","specificTime","dayOfWeek","dayOfMonth","ngOnInit","startAgent","subscribeToFormUpdates","ngOnDestroy","formUpdatesSubscription","unsubscribe","subscribe","next","response","addMessage","answer","error","console","getFormUpdates","updates","parsedUpdates","JSON","parse","name","undefined","patchValue","sendMessage","trim","askAgent","fieldName","fieldData","updateFormField","message","id","timestamp","Date","push","onEnterKeyPress","event","key","shiftKey","preventDefault","ɵɵdirectiveInject","i1","ChatService","i2","FormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","OnboardingComponent_Template","rf","ctx","OnboardingComponent_div_8_Template","OnboardingComponent_mat_progress_bar_9_Template","ɵɵtwoWayListener","OnboardingComponent_Template_input_ngModelChange_15_listener","ɵɵtwoWayBindingSet","OnboardingComponent_Template_input_keydown_15_listener","OnboardingComponent_Template_button_click_16_listener","OnboardingComponent_Template_input_blur_29_listener","tmp_0_0","OnboardingComponent_Template_input_blur_37_listener","OnboardingComponent_Template_mat_select_selectionChange_41_listener","OnboardingComponent_mat_option_42_Template","OnboardingComponent_Template_input_blur_46_listener","OnboardingComponent_Template_input_blur_54_listener","OnboardingComponent_Template_mat_select_selectionChange_58_listener","OnboardingComponent_mat_option_59_Template","OnboardingComponent_Template_input_blur_63_listener","OnboardingComponent_Template_mat_select_selectionChange_67_listener","OnboardingComponent_mat_option_68_Template","OnboardingComponent_mat_form_field_69_Template","OnboardingComponent_Template_mat_select_selectionChange_77_listener","OnboardingComponent_mat_option_78_Template","OnboardingComponent_mat_form_field_79_Template","OnboardingComponent_Template_input_blur_83_listener","OnboardingComponent_mat_form_field_84_Template","OnboardingComponent_mat_form_field_85_Template","ɵɵtwoWayProperty","tmp_7_0","tmp_9_0","tmp_10_0","tmp_11_0","i3","NgClass","NgForOf","NgIf","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","MaxValidator","NgModel","FormGroupDirective","FormControlName","i4","MatCard","MatCardContent","MatCardHeader","MatCardTitle","i5","MatFormField","MatLabel","MatSuffix","i6","MatInput","i7","MatSelect","i8","MatOption","i9","MatIconButton","i10","MatIcon","i11","MatProgressBar","i12","MatDivider","styles"],"sources":["D:\\Users\\william.wong\\Documents\\GitHub\\customer-onboarding-ai-agent\\angular-client\\src\\app\\components\\onboarding\\onboarding.component.ts","D:\\Users\\william.wong\\Documents\\GitHub\\customer-onboarding-ai-agent\\angular-client\\src\\app\\components\\onboarding\\onboarding.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { ChatService, ChatMessage, FormField } from '../../services/chat.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-onboarding',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressBarModule,\r\n    MatDividerModule\r\n  ],\r\n  templateUrl: './onboarding.component.html',\r\n  styleUrls: ['./onboarding.component.scss']\r\n})\r\nexport class OnboardingComponent implements OnInit, OnDestroy {\r\n  chatMessages: ChatMessage[] = [];\r\n  newMessage = '';\r\n  isLoading = false;\r\n  messageCounter = 0;\r\n  \r\n  onboardingForm: FormGroup;\r\n  formUpdatesSubscription?: Subscription;\r\n\r\n  environments = ['Development', 'Testing', 'Staging', 'Production'];\r\n  transferMethods = ['SFTP', 'API', 'Database', 'File Share', 'Message Queue', 'Other'];\r\n  frequencyTypes = ['Daily', 'Weekly', 'Monthly', 'Custom'];\r\n  daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n  constructor(\r\n    private chatService: ChatService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.onboardingForm = this.formBuilder.group({\r\n      flowName: ['', Validators.required],\r\n      sourceSystemName: ['', Validators.required],\r\n      sourceEnvironment: ['', Validators.required],\r\n      sourceSystemOwner: ['', Validators.required],\r\n      targetSystemName: ['', Validators.required],\r\n      targetEnvironment: ['', Validators.required],\r\n      targetSystemOwner: ['', Validators.required],\r\n      transferMethod: ['', Validators.required],\r\n      otherTransferMethod: [''],\r\n      frequencyType: ['', Validators.required],\r\n      customSchedule: [''],\r\n      specificTime: [''],\r\n      dayOfWeek: [''],\r\n      dayOfMonth: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.startAgent();\r\n    this.subscribeToFormUpdates();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.formUpdatesSubscription) {\r\n      this.formUpdatesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  startAgent() {\r\n    this.chatService.startAgent().subscribe({\r\n      next: (response) => {\r\n        this.addMessage(response.answer, false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error starting agent:', error);\r\n        this.addMessage('Error connecting to AI agent. Please check if the backend is running.', false);\r\n      }\r\n    });\r\n  }\r\n\r\n  subscribeToFormUpdates() {\r\n    this.formUpdatesSubscription = this.chatService.getFormUpdates().subscribe({\r\n      next: (updates) => {\r\n        try {\r\n          const parsedUpdates = JSON.parse(updates);\r\n          if (parsedUpdates.name && parsedUpdates.value !== undefined) {\r\n            this.onboardingForm.patchValue({\r\n              [parsedUpdates.name]: parsedUpdates.value\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing form updates:', error);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.newMessage.trim()) return;\r\n\r\n    this.addMessage(this.newMessage, true);\r\n    this.isLoading = true;\r\n\r\n    this.chatService.askAgent(this.newMessage).subscribe({\r\n      next: (response) => {\r\n        this.addMessage(response.answer, false);\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error sending message:', error);\r\n        this.addMessage('Error sending message. Please check if the backend is running.', false);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n\r\n    this.newMessage = '';\r\n  }\r\n\r\n  onFieldChange(fieldName: string, value: any) {\r\n    if (!value) return;\r\n    \r\n    const fieldData: FormField = { name: fieldName, value: value };\r\n    \r\n    this.chatService.updateFormField(fieldData).subscribe({\r\n      next: (response) => {\r\n        this.addMessage(response.answer, false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating field:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private addMessage(text: string, isUser: boolean) {\r\n    const message: ChatMessage = {\r\n      id: ++this.messageCounter,\r\n      text: text,\r\n      isUser: isUser,\r\n      timestamp: new Date()\r\n    };\r\n    this.chatMessages.push(message);\r\n  }\r\n\r\n  onEnterKeyPress(event: KeyboardEvent) {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      this.sendMessage();\r\n    }\r\n  }\r\n} ","<div class=\"full-height\">\r\n  <div style=\"display: flex; height: 100%;\">\r\n    \r\n    <!-- Chat Section (Left) -->\r\n    <div style=\"width: 50%; border-right: 1px solid #e0e0e0;\">\r\n      <mat-card class=\"chat-container\">\r\n        <mat-card-header style=\"background-color: #1976d2; color: white;\">\r\n          <mat-card-title style=\"color: white;\">AI Assistant</mat-card-title>\r\n        </mat-card-header>\r\n        \r\n        <div class=\"chat-messages\">\r\n          <div *ngFor=\"let message of chatMessages\" style=\"margin-bottom: 16px;\">\r\n            <mat-card [ngClass]=\"message.isUser ? 'user-message' : 'ai-message'\" class=\"message-card\">\r\n              <mat-card-content>\r\n                {{ message.text }}\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n        \r\n        <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\" color=\"primary\"></mat-progress-bar>\r\n        <mat-divider></mat-divider>\r\n        \r\n        <div class=\"chat-input\">\r\n          <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n            <mat-label>Type your message...</mat-label>\r\n            <input matInput \r\n                   [(ngModel)]=\"newMessage\" \r\n                   (keydown)=\"onEnterKeyPress($event)\"\r\n                   placeholder=\"Ask the AI assistant anything...\">\r\n            <button mat-icon-button matSuffix (click)=\"sendMessage()\">\r\n              <mat-icon>send</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <!-- Form Section (Right) -->\r\n    <div style=\"width: 50%; padding: 16px;\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>File Transfer Onboarding Form</mat-card-title>\r\n        </mat-card-header>\r\n        \r\n        <mat-card-content>\r\n          <form [formGroup]=\"onboardingForm\">\r\n            \r\n            <!-- Flow Name -->\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Flow Name</mat-label>\r\n              <input matInput formControlName=\"flowName\" \r\n                     (blur)=\"onFieldChange('flowName', onboardingForm.get('flowName')?.value)\">\r\n            </mat-form-field>\r\n\r\n            <!-- Source System Information -->\r\n            <mat-card class=\"section-card\">\r\n              <mat-card-title class=\"section-title\">Source System Information</mat-card-title>\r\n              <mat-card-content>\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Source System Name</mat-label>\r\n                  <input matInput formControlName=\"sourceSystemName\"\r\n                         (blur)=\"onFieldChange('sourceSystemName', onboardingForm.get('sourceSystemName')?.value)\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Source Environment</mat-label>\r\n                  <mat-select formControlName=\"sourceEnvironment\"\r\n                              (selectionChange)=\"onFieldChange('sourceEnvironment', $event.value)\">\r\n                    <mat-option *ngFor=\"let env of environments\" [value]=\"env\">{{env}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Source System Owner</mat-label>\r\n                  <input matInput formControlName=\"sourceSystemOwner\"\r\n                         (blur)=\"onFieldChange('sourceSystemOwner', onboardingForm.get('sourceSystemOwner')?.value)\">\r\n                </mat-form-field>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n            <!-- Target System Information -->\r\n            <mat-card class=\"section-card\">\r\n              <mat-card-title class=\"section-title\">Target System Information</mat-card-title>\r\n              <mat-card-content>\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Target System Name</mat-label>\r\n                  <input matInput formControlName=\"targetSystemName\"\r\n                         (blur)=\"onFieldChange('targetSystemName', onboardingForm.get('targetSystemName')?.value)\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Target Environment</mat-label>\r\n                  <mat-select formControlName=\"targetEnvironment\"\r\n                              (selectionChange)=\"onFieldChange('targetEnvironment', $event.value)\">\r\n                    <mat-option *ngFor=\"let env of environments\" [value]=\"env\">{{env}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Target System Owner</mat-label>\r\n                  <input matInput formControlName=\"targetSystemOwner\"\r\n                         (blur)=\"onFieldChange('targetSystemOwner', onboardingForm.get('targetSystemOwner')?.value)\">\r\n                </mat-form-field>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n            <!-- Transfer Method -->\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Transfer Method</mat-label>\r\n              <mat-select formControlName=\"transferMethod\"\r\n                          (selectionChange)=\"onFieldChange('transferMethod', $event.value)\">\r\n                <mat-option *ngFor=\"let method of transferMethods\" [value]=\"method\">{{method}}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"onboardingForm.get('transferMethod')?.value === 'Other'\" \r\n                            appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Other Transfer Method</mat-label>\r\n              <input matInput formControlName=\"otherTransferMethod\"\r\n                     (blur)=\"onFieldChange('otherTransferMethod', onboardingForm.get('otherTransferMethod')?.value)\">\r\n            </mat-form-field>\r\n\r\n            <!-- Transfer Frequency -->\r\n            <mat-card class=\"section-card\">\r\n              <mat-card-title class=\"section-title\">Transfer Frequency</mat-card-title>\r\n              <mat-card-content>\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Frequency Type</mat-label>\r\n                  <mat-select formControlName=\"frequencyType\"\r\n                              (selectionChange)=\"onFieldChange('frequencyType', $event.value)\">\r\n                    <mat-option *ngFor=\"let type of frequencyTypes\" [value]=\"type\">{{type}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field *ngIf=\"onboardingForm.get('frequencyType')?.value === 'Custom'\" \r\n                                appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Custom Schedule</mat-label>\r\n                  <input matInput formControlName=\"customSchedule\"\r\n                         (blur)=\"onFieldChange('customSchedule', onboardingForm.get('customSchedule')?.value)\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Specific Time (HH:MM)</mat-label>\r\n                  <input matInput type=\"time\" formControlName=\"specificTime\"\r\n                         (blur)=\"onFieldChange('specificTime', onboardingForm.get('specificTime')?.value)\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field *ngIf=\"onboardingForm.get('frequencyType')?.value === 'Weekly'\" \r\n                                appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Day of Week</mat-label>\r\n                  <mat-select formControlName=\"dayOfWeek\"\r\n                              (selectionChange)=\"onFieldChange('dayOfWeek', $event.value)\">\r\n                    <mat-option *ngFor=\"let day of daysOfWeek\" [value]=\"day\">{{day}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field *ngIf=\"onboardingForm.get('frequencyType')?.value === 'Monthly'\" \r\n                                appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Day of Month (1-31)</mat-label>\r\n                  <input matInput type=\"number\" min=\"1\" max=\"31\" formControlName=\"dayOfMonth\"\r\n                         (blur)=\"onFieldChange('dayOfMonth', onboardingForm.get('dayOfMonth')?.value)\">\r\n                </mat-form-field>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    \r\n  </div>\r\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}