{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8000/api';\n      this.formUpdatesSubject = new Subject();\n      this.initializeWebSocket();\n    }\n    initializeWebSocket() {\n      this.ws = new WebSocket('ws://localhost:8000/ws');\n      this.ws.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'update-form') {\n          this.formUpdatesSubject.next(data.payload);\n        }\n      };\n      this.ws.onclose = () => {\n        // Reconnect after a delay\n        setTimeout(() => this.initializeWebSocket(), 5000);\n      };\n    }\n    askAgent(prompt) {\n      return this.http.get(`${this.apiUrl}/ask-agent/${encodeURIComponent(prompt)}`);\n    }\n    startAgent() {\n      return this.http.get(`${this.apiUrl}/start-agent`);\n    }\n    updateFormField(fieldData) {\n      return this.http.post(`${this.apiUrl}/update-form-field`, fieldData);\n    }\n    getFormUpdates() {\n      return this.formUpdatesSubject.asObservable();\n    }\n    static {\n      this.ɵfac = function ChatService_Factory(t) {\n        return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ChatService,\n        factory: ChatService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}